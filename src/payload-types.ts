/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    users: User;
    'waiting-form-submissions': WaitingFormSubmission;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'waiting-form-submissions': WaitingFormSubmissionsSelect<false> | WaitingFormSubmissionsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    navbar: Navbar;
    footer: Footer;
    'blog-page': BlogPage;
  };
  globalsSelect: {
    navbar: NavbarSelect<false> | NavbarSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    'blog-page': BlogPageSelect<false> | BlogPageSelect<true>;
  };
  locale: 'en' | 'ar';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  slug: string;
  layout?:
    | (
        | {
            heading: string;
            highlight?: string | null;
            subHeading?: string | null;
            primaryButton?: string | null;
            /**
             * Enter a relative path like /contact or a full URL.
             */
            primaryButtonLink?: string | null;
            secondaryButton?: string | null;
            mainImage?: (number | null) | Media;
            barImage?: (number | null) | Media;
            personImage?: (number | null) | Media;
            bubbleText?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | {
            introText: string;
            companyLogos?:
              | {
                  logo?: (number | null) | Media;
                  id?: string | null;
                }[]
              | null;
            heading: string;
            items: {
              image?: (number | null) | Media;
              title?: string | null;
              text?: string | null;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'trusted';
          }
        | {
            heading: string;
            dashboardImage?: (number | null) | Media;
            dashboardNote?: string | null;
            cards: {
              icon?: (number | null) | Media;
              title?: string | null;
              description?: string | null;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'competeBetter';
          }
        | {
            title: string;
            highlight: string;
            description?: string | null;
            intro?: string | null;
            items?:
              | {
                  text: string;
                  id?: string | null;
                }[]
              | null;
            image?: (number | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'workFlow';
          }
        | {
            title: string;
            reviews: {
              name: string;
              role?: string | null;
              feedback: string;
              avatar?: (number | null) | Media;
              rating: number;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'client';
          }
        | {
            titleLines: {
              line: string;
              id?: string | null;
            }[];
            highlightText: string;
            buttonText: string;
            image: number | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'assisting';
          }
        | {
            titleLines: {
              line: string;
              id?: string | null;
            }[];
            faqs?:
              | {
                  question: string;
                  answer: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'faq';
          }
        | {
            mainTitleLines?:
              | {
                  text?: string | null;
                  isGradient?: boolean | null;
                  id?: string | null;
                }[]
              | null;
            companies?:
              | {
                  logo: number | Media;
                  id?: string | null;
                }[]
              | null;
            secondaryTitle: string;
            description: string;
            ctaText?: string | null;
            ctaLink?: string | null;
            image: number | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'aboutHero';
          }
        | {
            title: string;
            description?: string | null;
            image?: (number | null) | Media;
            items?:
              | {
                  heading: string;
                  text: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'aboutSection';
          }
        | {
            title: string;
            highlightText?: string | null;
            description?: string | null;
            cards?:
              | {
                  title: string;
                  description?: string | null;
                  img: number | Media;
                  id?: string | null;
                }[]
              | null;
            ctaText?: string | null;
            ctaLink?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'whyChooseSection';
          }
        | {
            stats?:
              | {
                  number: string;
                  label?: string | null;
                  id?: string | null;
                }[]
              | null;
            textColor?: string | null;
            direction?: ('ltr' | 'rtl') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'statsSection';
          }
        | {
            /**
             * The main headline for the section.
             */
            mainHeading: string;
            description: string;
            ctaText: string;
            /**
             * The URL the button should link to. (e.g., /contact)
             */
            ctaLink?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaSection';
          }
        | {
            mainTitle: string;
            sections?:
              | {
                  /**
                   * e.g., "Introduction" or "Information We Collect".
                   */
                  heading: string;
                  content: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'privacyPolicy';
          }
        | {
            ttl: string;
            sub: string;
            ftrs?:
              | {
                  ttl: string;
                  desc: string;
                  txt: string;
                  icns?:
                    | {
                        icn: string;
                        bg: 'bg-blue-100' | 'bg-green-100' | 'bg-purple-100' | 'bg-yellow-100' | 'bg-orange-100';
                        id?: string | null;
                      }[]
                    | null;
                  vid: number | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'keyFeatures';
          }
        | {
            mainTitle: string;
            /**
             * The introductory paragraphs before the numbered sections begin.
             */
            introduction?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            sections?:
              | {
                  /**
                   * Example: "1. Subscriptions" or "2. Nafes Responsibilities"
                   */
                  heading: string;
                  content: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'termsAndConditions';
          }
        | {
            heroTitle: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'waitingListHero';
          }
        | {
            title: string;
            reasons: {
              reason: string;
              id?: string | null;
            }[];
            subTitle?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'waitingListReason';
          }
        | {
            img: number | Media;
            head?: string | null;
            sub?: string | null;
            steps: {
              stp: number;
              fType: 'select' | 'form' | 'final';
              flds?:
                | {
                    ttl: string;
                    inpts?:
                      | {
                          /**
                           * Pick one submission field (use only once)
                           */
                          nm:
                            | 'business_type'
                            | 'fleet'
                            | 'manage_operation'
                            | 'challenge'
                            | 'full_name'
                            | 'email'
                            | 'company_name'
                            | 'mobile'
                            | 'manageOperation'
                            | 'objective'
                            | 'platforms'
                            | 'averageRate'
                            | 'tendersPerMonth';
                          /**
                           * Label shown on the form
                           */
                          lbl: string;
                          id?: string | null;
                        }[]
                      | null;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[];
            btn?: string | null;
            thanks?: string | null;
            msg?: string | null;
            back?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'msForm';
          }
      )[]
    | null;
  /**
   * The date the page will be considered published. If this date is in the future, the page will not be publicly accessible until that date.
   */
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  slug: string;
  'Short Description'?: string | null;
  heroTag?: string | null;
  heroImage?: (number | null) | Media;
  publishedAt?: string | null;
  author?: (number | null) | User;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  seo?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "waiting-form-submissions".
 */
export interface WaitingFormSubmission {
  id: number;
  business_type?: string | null;
  fleet?: string | null;
  manage_operation?: string | null;
  challenge?: string | null;
  full_name?: string | null;
  email?: string | null;
  company_name?: string | null;
  mobile?: string | null;
  objective?: string | null;
  platforms?: string | null;
  averageRate?: string | null;
  tendersPerMonth?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'waiting-form-submissions';
        value: number | WaitingFormSubmission;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  layout?:
    | T
    | {
        hero?:
          | T
          | {
              heading?: T;
              highlight?: T;
              subHeading?: T;
              primaryButton?: T;
              primaryButtonLink?: T;
              secondaryButton?: T;
              mainImage?: T;
              barImage?: T;
              personImage?: T;
              bubbleText?: T;
              id?: T;
              blockName?: T;
            };
        trusted?:
          | T
          | {
              introText?: T;
              companyLogos?:
                | T
                | {
                    logo?: T;
                    id?: T;
                  };
              heading?: T;
              items?:
                | T
                | {
                    image?: T;
                    title?: T;
                    text?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        competeBetter?:
          | T
          | {
              heading?: T;
              dashboardImage?: T;
              dashboardNote?: T;
              cards?:
                | T
                | {
                    icon?: T;
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        workFlow?:
          | T
          | {
              title?: T;
              highlight?: T;
              description?: T;
              intro?: T;
              items?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              image?: T;
              id?: T;
              blockName?: T;
            };
        client?:
          | T
          | {
              title?: T;
              reviews?:
                | T
                | {
                    name?: T;
                    role?: T;
                    feedback?: T;
                    avatar?: T;
                    rating?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        assisting?:
          | T
          | {
              titleLines?:
                | T
                | {
                    line?: T;
                    id?: T;
                  };
              highlightText?: T;
              buttonText?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        faq?:
          | T
          | {
              titleLines?:
                | T
                | {
                    line?: T;
                    id?: T;
                  };
              faqs?:
                | T
                | {
                    question?: T;
                    answer?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        aboutHero?:
          | T
          | {
              mainTitleLines?:
                | T
                | {
                    text?: T;
                    isGradient?: T;
                    id?: T;
                  };
              companies?:
                | T
                | {
                    logo?: T;
                    id?: T;
                  };
              secondaryTitle?: T;
              description?: T;
              ctaText?: T;
              ctaLink?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        aboutSection?:
          | T
          | {
              title?: T;
              description?: T;
              image?: T;
              items?:
                | T
                | {
                    heading?: T;
                    text?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        whyChooseSection?:
          | T
          | {
              title?: T;
              highlightText?: T;
              description?: T;
              cards?:
                | T
                | {
                    title?: T;
                    description?: T;
                    img?: T;
                    id?: T;
                  };
              ctaText?: T;
              ctaLink?: T;
              id?: T;
              blockName?: T;
            };
        statsSection?:
          | T
          | {
              stats?:
                | T
                | {
                    number?: T;
                    label?: T;
                    id?: T;
                  };
              textColor?: T;
              direction?: T;
              id?: T;
              blockName?: T;
            };
        ctaSection?:
          | T
          | {
              mainHeading?: T;
              description?: T;
              ctaText?: T;
              ctaLink?: T;
              id?: T;
              blockName?: T;
            };
        privacyPolicy?:
          | T
          | {
              mainTitle?: T;
              sections?:
                | T
                | {
                    heading?: T;
                    content?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        keyFeatures?:
          | T
          | {
              ttl?: T;
              sub?: T;
              ftrs?:
                | T
                | {
                    ttl?: T;
                    desc?: T;
                    txt?: T;
                    icns?:
                      | T
                      | {
                          icn?: T;
                          bg?: T;
                          id?: T;
                        };
                    vid?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        termsAndConditions?:
          | T
          | {
              mainTitle?: T;
              introduction?: T;
              sections?:
                | T
                | {
                    heading?: T;
                    content?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        waitingListHero?:
          | T
          | {
              heroTitle?: T;
              id?: T;
              blockName?: T;
            };
        waitingListReason?:
          | T
          | {
              title?: T;
              reasons?:
                | T
                | {
                    reason?: T;
                    id?: T;
                  };
              subTitle?: T;
              id?: T;
              blockName?: T;
            };
        msForm?:
          | T
          | {
              img?: T;
              head?: T;
              sub?: T;
              steps?:
                | T
                | {
                    stp?: T;
                    fType?: T;
                    flds?:
                      | T
                      | {
                          ttl?: T;
                          inpts?:
                            | T
                            | {
                                nm?: T;
                                lbl?: T;
                                id?: T;
                              };
                          id?: T;
                        };
                    id?: T;
                  };
              btn?: T;
              thanks?: T;
              msg?: T;
              back?: T;
              id?: T;
              blockName?: T;
            };
      };
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  'Short Description'?: T;
  heroTag?: T;
  heroImage?: T;
  publishedAt?: T;
  author?: T;
  content?: T;
  relatedPosts?: T;
  seo?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "waiting-form-submissions_select".
 */
export interface WaitingFormSubmissionsSelect<T extends boolean = true> {
  business_type?: T;
  fleet?: T;
  manage_operation?: T;
  challenge?: T;
  full_name?: T;
  email?: T;
  company_name?: T;
  mobile?: T;
  objective?: T;
  platforms?: T;
  averageRate?: T;
  tendersPerMonth?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navbar".
 */
export interface Navbar {
  id: number;
  logo: number | Media;
  navLinks?:
    | {
        label: string;
        href: string;
        id?: string | null;
      }[]
    | null;
  buttons?:
    | {
        label: string;
        href: string;
        variant?: ('primary' | 'outline') | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  logo?: (number | null) | Media;
  highlightImage?: (number | null) | Media;
  links?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  socials?:
    | {
        platform: 'facebook' | 'instagram' | 'twitter' | 'linkedin' | 'email' | 'phone';
        url: string;
        icon: number | Media;
        id?: string | null;
      }[]
    | null;
  legalLinks?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  footerNote?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-page".
 */
export interface BlogPage {
  id: number;
  hero: {
    title: string;
    description: string;
    image: number | Media;
  };
  /**
   * Select one post to feature at the top of the page.
   */
  featuredPost: number | Post;
  moreArticlesTitle: string;
  featurePostButtonText: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navbar_select".
 */
export interface NavbarSelect<T extends boolean = true> {
  logo?: T;
  navLinks?:
    | T
    | {
        label?: T;
        href?: T;
        id?: T;
      };
  buttons?:
    | T
    | {
        label?: T;
        href?: T;
        variant?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  logo?: T;
  highlightImage?: T;
  links?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  socials?:
    | T
    | {
        platform?: T;
        url?: T;
        icon?: T;
        id?: T;
      };
  legalLinks?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  footerNote?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-page_select".
 */
export interface BlogPageSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  featuredPost?: T;
  moreArticlesTitle?: T;
  featurePostButtonText?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}